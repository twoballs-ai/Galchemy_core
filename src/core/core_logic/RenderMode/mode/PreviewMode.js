// PreviewMode.js
import { BaseMode } from '../BaseMode.js';
import { createAPI } from '../../../integration/apiFactory.js';
import { runUserCode } from '../../../integration/userCodeRunner.js';
import { EditorMode } from './EditorMode.js'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ instanceof

export class PreviewMode extends BaseMode {
  constructor(core, levelName, userCode) {
    super(core);
    this.levelName = levelName;
    this.userCode = userCode;  // <-- –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å—é–¥–∞ —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞
  }

 async start() {
  super.start();
  this.sceneManager.changeScene(this.levelName);

  this.handleKeyDown = (e) => {
    if (e.key === 'Escape') {
      console.log("ESC pressed. Emitting pointerLockExit.");
      this.core.emitter.emit('pointerLockExit');
    }
  };
  window.addEventListener('keydown', this.handleKeyDown);

  if (this.userCode) {
    this.api = createAPI({ core: this.core });
    await runUserCode(this.userCode, this.api, this.core.emitter);
  }

  this.preparePreview();
  console.log("–∑–∞–ø—É—â–µ–Ω –ø—Ä–µ–≤—å—é");
}


  preparePreview() {
    const objects = this.sceneManager.getGameObjectsFromCurrentScene();
    objects.forEach((object) => {
      if (typeof object.prepareForPreview === 'function') {
        object.prepareForPreview();
      }
    });
  }

  shouldRenderEachFrame() {
    return true;
  }
  update(deltaTime) {
    this.core.sceneManager.update(deltaTime);
    if (this.core.logicSystem) {
      this.core.logicSystem.update(deltaTime);
    }
  
    // üëá –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º update API (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
    if (this.api?.character) {
      this.api.character.update();
    }
  }

  render() {
    // console.log("Preview render called!") // –∏–ª–∏ debugger;

    this.core.renderer.clear();
    this.sceneManager.render(this.core.renderer.context);

    const ctx = this.core.renderer.context;
  
    // –ó–∞–ª–∏–≤–∞–µ–º –≤–µ—Å—å –∫–∞–Ω–≤–∞—Å —á–µ—Ä–Ω—ã–º —Ñ–æ–Ω–æ–º
    ctx.save();
    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    ctx.restore();
  
    // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç—ã —Å—Ü–µ–Ω—ã (—Å–ø—Ä–∞–π—Ç—ã, –∏–≥—Ä–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã)
    this.sceneManager.render(ctx);
  
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    ctx.save();
    ctx.fillStyle = 'rgba(255, 255, 255, 0.8)'; // –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
    ctx.font = '20px Arial';
    ctx.fillText(`Preview Mode: ${this.levelName}`, 10, 30);
    ctx.restore();
  }

  stop() {
    super.stop();
    window.removeEventListener('keydown', this.handleKeyDown);
    console.log(`Stopped previewing level: ${this.levelName}`);
  }
}
